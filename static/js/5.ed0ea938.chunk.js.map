{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","pages/Game/Question/index.js"],"names":["_slicedToArray","arr","i","arrayWithHoles","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","nonIterableRest","Question","question","answers","onDone","React","useState","setValue","useEffect","onChange","e","target","onClick","includes"],"mappings":"kIAIe,SAASA,EAAeC,EAAKC,GAC1C,OAAO,OAAAC,EAAA,GAAeF,ICLT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXE,QAA4BA,OAAOC,YAAYC,OAAOL,GAAjE,CACA,IAAIM,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKZ,EAAIG,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETf,GAAKK,EAAKW,SAAWhB,GAH8CM,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GDnBuB,CAAqBN,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IAAM,OAAAmB,EAAA,K,2BEuBvFC,UA1BE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAAa,IACtBC,IAAMC,SAAS,IADO,GACzCV,EADyC,KAClCW,EADkC,KAGhDF,IAAMG,WAAU,WACZD,EAAS,MACV,CAACL,EAAUC,IASd,OACI,gCACI,6BAAKD,IACL,uBACIO,SAAU,SAAAC,GAAC,OAAIH,EAASG,EAAEC,OAAOf,QACjCA,MAAOA,IAEX,wBAAQgB,QAdK,WACbT,EAAQU,SAASjB,GACjBQ,IAEAG,EAAS,KAUT","file":"static/js/5.ed0ea938.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import React from \"react\";\n\nconst Question = ({ question, answers, onDone }) => {\n    const [value, setValue] = React.useState(\"\");\n\n    React.useEffect(() => {\n        setValue(\"\");\n    }, [question, answers]);\n\n    const handleSubmit = () => {\n        if (answers.includes(value)) {\n            onDone();\n        } else {\n            setValue(\"\");\n        }\n    };\n    return (\n        <div>\n            <h3>{question}</h3>\n            <input\n                onChange={e => setValue(e.target.value)}\n                value={value}\n            ></input>\n            <button onClick={handleSubmit}>SUBMIT</button>\n        </div>\n    );\n};\n\nexport default Question;\n"],"sourceRoot":""}